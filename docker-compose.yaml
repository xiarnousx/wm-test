version: "3.7"

services:
  
  gateway:
    container_name: gateway
    build:
      context: .
      dockerfile: ./infra/gateway/dockerfile
    volumes:
      - ./gateway:/gateway
    deploy:
      replicas: 1
    ports:
     - 8000:8000
    networks: 
      - backend
    depends_on: 
      - redis

  contacts:
    container_name: contacts
    build:
      context: .
      dockerfile: ./infra/contacts/dockerfile
    volumes:
      - ./contacts:/contacts
      - ./data/contacts:/contacts/data
    networks: 
      - backend
  
  geodistancer:
    container_name: geodistancer
    build:
      context: .
      dockerfile: ./infra/geodistancer/dockerfile
    volumes:
      - ./geodistancer:/geodistancer
    networks:
      - backend
  
  locations:
    container_name: locations
    build:
      context: .
      dockerfile: ./infra/locations/dockerfile
    volumes:
      - ./locations:/locations
      - ./data/location:/locations/data
    networks: 
      - backend
    depends_on: 
      - locations_db
    ports:
      - 8282:8282
  
  locations_db:
    container_name: locations_db
    image: mysql:8
    command: ["--default-authentication-plugin=mysql_native_password", "--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci"]
    env_file: .env
    environment: 
      MYSQL_ROOT_PASSWORD: ${LOCATION_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${LOCATION_MYSQL_DATABASE}
      MYSQL_USER: ${LOCATION_MYSQL_USER}
      MYSQL_PASSWORD: ${LOCATION_MYSQL_PASSWORD}
    volumes:
      - ./infra/locations_db:/docker-entrypoint-initdb.d:ro
    networks: 
      - backend

  
  redis:
    container_name: redis
    build:
      context: .
      dockerfile: ./infra/redis/dockerfile
    deploy:
      replicas: 1
    networks:
      - backend
  
  auth:
    container_name: auth
    image: mongo:3.6-xenial
    restart: always
    environment: 
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: graphql
    volumes: 
      - ./infra/auth/users/users.json:/seed/users.json:ro
      - ./infra/auth/init.sh:/docker-entrypoint-initdb.d/init.sh:ro
    networks: 
      - backend
    
  ui:
    container_name: ui
    build:
      context: .
      dockerfile: ./infra/ui/dockerfile
    volumes:
      - ./ui:/ui
    ports: 
      - 80:80
    networks:
      - frontend


networks:
  backend:
    driver: bridge
  
  frontend:
    driver: bridge
